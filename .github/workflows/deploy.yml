name: Deploy Flask Todo App

on:
  push:
    branches:
      - main  # or your default branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region us-east-1
          aws configure set output json
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7
          
      - name: Setup Docker
        uses: docker/setup-buildx-action@v2
          
      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init
        
      - name: Validate Terraform
        run: |
          cd terraform
          terraform validate
          
      - name: Apply Terraform changes
        run: |
          cd terraform
          terraform apply -auto-approve
          
      - name: Get ECR Repository
        id: get-ecr
        run: |
          # Get AWS account ID
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID" >> $GITHUB_ENV
          
          # Construct ECR repository URL with hardcoded region
          ECR_REPO_URL="${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/flask-todo-app"
          echo "ECR_REPO_URL=$ECR_REPO_URL" >> $GITHUB_ENV
          
      - name: Build and push Docker image
        run: |
          cd server
          
          # Login to ECR with hardcoded region
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REPO_URL
          
          # Build and push Docker image
          docker build -t flask-todo-app:latest .
          docker tag flask-todo-app:latest $ECR_REPO_URL:latest
          docker push $ECR_REPO_URL:latest
          
      - name: Deploy to ECS
        run: |
          # Force new deployment with hardcoded region
          aws ecs update-service --cluster flask-todo-cluster --service flask-todo-service --force-new-deployment --region us-east-1
          
          # Wait for service to stabilize
          aws ecs wait services-stable --cluster flask-todo-cluster --services flask-todo-service --region us-east-1
          
      - name: Get ALB DNS Name
        id: get-alb
        run: |
          cd terraform
          ALB_DNS=$(terraform output alb_dns_name | tr -d '"')
          echo "Application is available at: http://$ALB_DNS"